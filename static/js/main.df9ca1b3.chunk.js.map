{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","classNames","TodoList","todos","map","getUserById","usersFromServer","find","App","useState","setTitle","setUserId","todosFromServer","setTodos","titleError","setTitleError","userError","setUserError","action","method","onSubmit","event","preventDefault","trimmedTitle","trim","newTodo","Math","max","htmlFor","type","placeholder","value","onChange","test","target","onKeyDown","key","newTitle","slice","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.df9ca1b3.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React from 'react';\nimport { Users } from '../../types/Users';\n\ntype Props = {\n  user: Users;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a\n      className=\"UserInfo\"\n      href={`mailto:${email}`}\n    >\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { UserInfo } from '../UserInfo';\nimport { Todos } from '../../types/Todos';\n\ntype Props = {\n  todo: Todos;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    completed,\n    title,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todos } from '../../types/Todos';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todos[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => {\n        return (\n          <TodoInfo\n            key={todo.id}\n            todo={todo}\n          />\n        );\n      })}\n    </section>\n  );\n};\n","import './App.scss';\nimport React, { useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\n\nfunction getUserById(userId: number) {\n  return usersFromServer.find(user => user.id === userId);\n}\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [todos, setTodos] = useState(\n    todosFromServer.map(todo => ({\n      ...todo,\n      user: getUserById(todo.userId),\n    })),\n  );\n  const [titleError, setTitleError] = useState(false);\n  const [userError, setUserError] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const regex = /^[A-Za-z0-9\\u0400-\\u04FF\\s]+$/;\n    const isValid = regex.test(event.target.value);\n\n    if (!isValid) {\n      return;\n    }\n\n    setTitle(event.target.value);\n    setTitleError(false);\n  };\n\n  const handleTitleKeyPress = (\n    event: React.KeyboardEvent<HTMLInputElement>,\n  ) => {\n    if (event.key === 'Backspace' || event.key === 'Delete') {\n      const newTitle = title.slice(0, -1);\n\n      setTitle(newTitle);\n      setTitleError(false);\n    }\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setUserError(false);\n  };\n\n  const resetForm = () => {\n    setTitle('');\n    setUserId(0);\n    setTitleError(false);\n    setUserError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const trimmedTitle = title.trim();\n\n    if (!trimmedTitle) {\n      setTitleError(true);\n    }\n\n    if (!userId) {\n      setUserError(true);\n    }\n\n    if (!trimmedTitle || !userId) {\n      return;\n    }\n\n    const newTodo = {\n      id: Math.max(...todos.map(todo => todo.id)) + 1,\n      title: trimmedTitle,\n      userId,\n      user: getUserById(userId),\n      completed: false,\n    };\n\n    setTodos([...todos, newTodo]);\n    resetForm();\n\n    setTitleError(false);\n    setUserError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            id=\"title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Please title\"\n            value={title}\n            onChange={handleTitleChange}\n            onKeyDown={handleTitleKeyPress}\n          />\n          {titleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">User: </label>\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleUserChange}\n          >\n            <option\n              value=\"0\"\n              disabled\n            >\n              Choose a user\n            </option>\n\n            {usersFromServer.map(user => {\n              const { id, name } = user;\n\n              return (\n                <option\n                  value={id}\n                  key={id}\n                >\n                  {name}\n                </option>\n              );\n            })}\n          </select>\n          {userError && (<span className=\"error\">Please choose a user</span>)}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}